
DROP TABLE T_TRANSACTION IF EXISTS;

DROP TABLE T_WALLET IF EXISTS;

DROP TABLE T_SUB_CATEGORY IF EXISTS;

DROP TABLE T_CATEGORY IF EXISTS;

DROP TABLE T_USER IF EXISTS;

-- T_USER TABLE --

CREATE TABLE T_USER
(ID VARCHAR(50) PRIMARY KEY,
EMAIL VARCHAR(50) UNIQUE);


-- T_CATEGORY TABLE --

CREATE TABLE T_CATEGORY
(ID UUID DEFAULT uuid() PRIMARY KEY,
CATEGORY VARCHAR(20) NOT NULL,
OWNER_ID VARCHAR(50) NOT NULL,
FOREIGN KEY(OWNER_ID) REFERENCES T_USER(ID));


-- T_SUB_CATEGORY TABLE --

CREATE TABLE T_SUB_CATEGORY
(ID UUID DEFAULT uuid() PRIMARY KEY,
SUB_CATEGORY VARCHAR(200) NOT NULL,
CATEGORY_ID UUID NOT NULL,
OWNER_ID VARCHAR(50) NOT NULL,
FOREIGN KEY(CATEGORY_ID) REFERENCES T_CATEGORY(ID),
FOREIGN KEY(OWNER_ID) REFERENCES T_USER(ID));


-- T_WALLET TABLE --

CREATE TABLE T_WALLET
(ID UUID DEFAULT uuid() PRIMARY KEY,
NAME VARCHAR(50),
DATE_CREATED BIGINT NOT NULL,
AMOUNT BIGINT DEFAULT 0,
OWNER_ID VARCHAR(50) NOT NULL,
FOREIGN KEY(OWNER_ID) REFERENCES T_USER(ID));


-- T_TRANSACTION TABLE --

CREATE TABLE T_TRANSACTION
(ID UUID DEFAULT uuid() PRIMARY KEY,
DATE_CREATED BIGINT NOT NULL,
OCCURRENCE_DATE BIGINT NOT NULL,
DESCRIPTION VARCHAR(256) NOT NULL,
AMOUNT INT NOT NULL,
TRANSACTION_TYPE VARCHAR(15) NOT NULL,
TAG VARCHAR(30) NOT NULL,
CATEGORY_ID UUID NOT NULL,
SUB_CATEGORY_ID UUID NOT NULL,
WALLET_ID UUID NOT NULL,
OWNER_ID VARCHAR(50) NOT NULL,
FOREIGN KEY(WALLET_ID) REFERENCES T_WALLET(ID),
FOREIGN KEY(OWNER_ID) REFERENCES T_USER (ID),
FOREIGN KEY(CATEGORY_ID) REFERENCES T_CATEGORY (ID),
FOREIGN KEY(SUB_CATEGORY_ID) REFERENCES T_SUB_CATEGORY (ID),
CONSTRAINT CHECK_TYPE CHECK (TRANSACTION_TYPE IN ('EXPENSE', 'INCOME')));
